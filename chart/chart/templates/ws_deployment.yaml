apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "trackableappname" . }}-ws
  labels:
    app: {{ template "appname" . }}-ws
    track: "{{ .Values.application.track }}"
    tier: "{{ .Values.application.tier }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: websocket
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ template "appname" . }}-ws
      track: "{{ .Values.application.track }}"
      tier: "{{ .Values.application.tier }}"
      release: {{ .Release.Name }}
      component: websocket
  strategy:
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ template "appname" . }}-ws
        track: "{{ .Values.application.track }}"
        tier: "{{ .Values.application.tier }}"
        release: {{ .Release.Name }}
        component: websocket
    spec:
      imagePullSecrets:
{{ toYaml .Values.image.secrets | indent 10 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ template "appname" . }}-ws
                topologyKey: kubernetes.io/hostname
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/rpc-gateway", "websocket-gateway"]
        securityContext:
          capabilities:
            add:
              - SYS_PTRACE
        env:
        - name: AP_GATEWAY_WEBSOCKET_RABBIT_HOST
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.application.env_secret_key }}"
              key: "rabbitmq_host"
        - name: AP_GATEWAY_WEBSOCKET_RABBIT_USERNAME
          value: {{ .Values.env.rabbitmq_username }}
        - name: AP_GATEWAY_WEBSOCKET_RABBIT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.application.env_secret_key }}"
              key: "rabbitmq_password"
        - name: AP_ETCD_SERVER
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.application.env_secret_key }}"
              key: "etcd_server"
        - name: AP_LOG_REMOTE_ADDRESS
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.application.env_secret_key }}"
              key: "log_hub_address"
        - name: AP_GATEWAY_WEBSOCKET_LISTEN_ADDR
          value: {{ .Values.env.gateway_websocket_listen_addr }}
        ports:
        - name: "{{ .Values.service.name }}-websocket"
          containerPort: {{ .Values.service.websocketPort }}
        - name: metrics
          containerPort: {{.Values.prometheus.metricsPort}}
        resources:
{{ toYaml .Values.resources | indent 12 }}
